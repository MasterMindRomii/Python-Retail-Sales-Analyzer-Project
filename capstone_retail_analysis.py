# -*- coding: utf-8 -*-
"""Capstone Retail Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1J_mFfn98OOiOetYrpOQVhSWUL2SKZkon
"""

# 1. Read Data: Load the CSV data into a Pandas DataFrame.
# 2. Data Cleaning:
#      Check for and remove rows with missing values in any column.
# 3. Data Manipulation and Analysis:
#      Calculate total sales per product.
#      Identify the best-selling product.
#      Compute average daily sales.
# 4.  Visualization:
#      Plot sales trends over time.
#      Display sales per product in a bar chart.
# 5.  Class and Function:
#      Define a Python class RetailSalesAnalyzer with methods for each of the above tasks (loading data, calculating statistics, and creating visualizations).
# 6.  Script Execution:
#      Write a script that creates an instance of RetailSalesAnalyzer, calls its methods, and displays the results.

import pandas as pd
import matplotlib.pyplot as plt


class RetailSalesAnalyzer:
    def __init__(self):
        self.data = pd.read_csv("retail_sales.csv")
        self.data['Date'] = pd.to_datetime(self.data['Date'])

    def data_clean(self):
        self.data.dropna(inplace=True)

    def total_sales_per_product(self):
        return self.data.groupby('Product')['Sales'].sum()

    def best_selling_product(self):
        return self.data.groupby('Product')['Sales'].sum().idxmax()

    def average_daily_Sales(self):
        return self.data.groupby('Date')['Sales'].mean()

    def plot_sales_trend(self):
        self.data.groupby('Date')['Sales'].mean().plot(kind='line')

    def plot_sales_per_product(self):
        self.data.groupby('Product')['Sales'].sum().plot(kind='bar')

analyzer = RetailSalesAnalyzer()
print(' Total Sales per Product: \n', analyzer.total_sales_per_product())
print('Best Selling Product: ', analyzer.best_selling_product())
print(' Average Daily Sales ', analyzer.average_daily_Sales())
analyzer.plot_sales_per_product()

analyzer.plot_sales_trend()